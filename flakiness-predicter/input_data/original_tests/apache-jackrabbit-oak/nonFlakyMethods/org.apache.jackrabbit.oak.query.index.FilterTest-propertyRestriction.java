@Test public void propertyRestriction(){
  PropertyValue one=PropertyValues.newString("1");
  PropertyValue two=PropertyValues.newString("2");
  FilterImpl f=new FilterImpl();
  assertTrue(null == f.getPropertyRestriction("x"));
  f.restrictProperty("x",Operator.LESS_OR_EQUAL,two);
  assertEquals("..2]",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.GREATER_OR_EQUAL,one);
  assertEquals("[1..2]",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.GREATER_THAN,one);
  assertEquals("[1..2]",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.LESS_THAN,two);
  assertEquals("[1..2]",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.EQUAL,two);
  assertEquals("2",f.getPropertyRestriction("x").toString());
  f=new FilterImpl();
  f.restrictProperty("x",Operator.EQUAL,one);
  assertEquals("1",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.EQUAL,one);
  assertEquals("1",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.GREATER_OR_EQUAL,one);
  assertEquals("1",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.LESS_OR_EQUAL,one);
  assertEquals("1",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.GREATER_THAN,one);
  assertEquals("1",f.getPropertyRestriction("x").toString());
  f=new FilterImpl();
  f.restrictProperty("x",Operator.EQUAL,one);
  assertEquals("1",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.LESS_THAN,one);
  assertEquals("1",f.getPropertyRestriction("x").toString());
  f=new FilterImpl();
  f.restrictProperty("x",Operator.NOT_EQUAL,null);
  assertEquals("",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.LESS_THAN,one);
  assertEquals("..1)",f.getPropertyRestriction("x").toString());
  f.restrictProperty("x",Operator.EQUAL,two);
  assertEquals("2",f.getPropertyRestriction("x").toString());
}
