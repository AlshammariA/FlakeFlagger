@Test public void testAdd(){
  HeaderValues headerValues=new HeaderValues(Headers.HOST);
  assertTrue(headerValues.add("Foo"));
  assertTrue(headerValues.contains("Foo"));
  assertTrue(headerValues.contains(new String("Foo")));
  assertFalse(headerValues.contains("Bar"));
  assertFalse(headerValues.isEmpty());
  assertEquals(1,headerValues.size());
  assertEquals("Foo",headerValues.peek());
  assertEquals("Foo",headerValues.peekFirst());
  assertEquals("Foo",headerValues.peekLast());
  assertEquals("Foo",headerValues.get(0));
  assertTrue(headerValues.offerFirst("First!"));
  assertTrue(headerValues.contains("First!"));
  assertTrue(headerValues.contains("Foo"));
  assertEquals(2,headerValues.size());
  assertEquals("First!",headerValues.peek());
  assertEquals("First!",headerValues.peekFirst());
  assertEquals("First!",headerValues.get(0));
  assertEquals("Foo",headerValues.peekLast());
  assertEquals("Foo",headerValues.get(1));
  assertTrue(headerValues.offerLast("Last!"));
  assertTrue(headerValues.contains("Last!"));
  assertTrue(headerValues.contains("Foo"));
  assertTrue(headerValues.contains("First!"));
  assertEquals(3,headerValues.size());
  assertEquals("First!",headerValues.peek());
  assertEquals("First!",headerValues.peekFirst());
  assertEquals("First!",headerValues.get(0));
  assertEquals("Foo",headerValues.get(1));
  assertEquals("Last!",headerValues.peekLast());
  assertEquals("Last!",headerValues.get(2));
}
