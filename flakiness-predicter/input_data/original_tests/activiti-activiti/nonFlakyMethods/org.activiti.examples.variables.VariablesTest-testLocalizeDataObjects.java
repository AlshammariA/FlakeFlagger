@Deployment public void testLocalizeDataObjects(){
  Map<String,Object> variables=new HashMap<String,Object>();
  variables.put("stringVar","coca-cola");
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("localizeVariables",variables);
  Task task=taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();
  ObjectNode infoNode=dynamicBpmnService.getProcessDefinitionInfo(processInstance.getProcessDefinitionId());
  dynamicBpmnService.changeLocalizationName("en-US","stringVarId","stringVar 'en-US' Name",infoNode);
  dynamicBpmnService.changeLocalizationDescription("en-US","stringVarId","stringVar 'en-US' Description",infoNode);
  dynamicBpmnService.changeLocalizationName("en-AU","stringVarId","stringVar 'en-AU' Name",infoNode);
  dynamicBpmnService.changeLocalizationDescription("en-AU","stringVarId","stringVar 'en-AU' Description",infoNode);
  dynamicBpmnService.changeLocalizationName("en","stringVarId","stringVar 'en' Name",infoNode);
  dynamicBpmnService.changeLocalizationDescription("en","stringVarId","stringVar 'en' Description",infoNode);
  dynamicBpmnService.changeLocalizationName("en-US","intVarId","intVar 'en-US' Name",infoNode);
  dynamicBpmnService.changeLocalizationDescription("en-US","intVarId","intVar 'en-US' Description",infoNode);
  dynamicBpmnService.changeLocalizationName("en-AU","intVarId","intVar 'en-AU' Name",infoNode);
  dynamicBpmnService.changeLocalizationDescription("en-AU","intVarId","intVar 'en-AU' Description",infoNode);
  dynamicBpmnService.changeLocalizationName("en","intVarId","intVar 'en' Name",infoNode);
  dynamicBpmnService.changeLocalizationDescription("en","intVarId","intVar 'en' Description",infoNode);
  dynamicBpmnService.saveProcessDefinitionInfo(processInstance.getProcessDefinitionId(),infoNode);
  Map<String,DataObject> dataObjects=runtimeService.getDataObjects(processInstance.getId(),"es",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'es' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'es' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),"en-US",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),"en-AU",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),"en-GB",true);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),"en-GB",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  List<String> variableNames=new ArrayList<String>();
  variableNames.add("stringVar");
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),variableNames,"en-US",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),variableNames,"en-AU",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),variableNames,"en-GB",true);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(processInstance.getId(),variableNames,"en-GB",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),"en-US",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),"en-AU",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),"en-GB",true);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),"en-GB",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),"ja-JA",true);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),variableNames,"en-US",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),variableNames,"en-AU",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),variableNames,"en-GB",true);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(processInstance.getId(),variableNames,"en-GB",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  DataObject dataObject=runtimeService.getDataObject(processInstance.getId(),"stringVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar",dataObject.getLocalizedName());
  assertEquals("stringVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=runtimeService.getDataObject(processInstance.getId(),"stringVar","en-US",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en-US' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=runtimeService.getDataObject(processInstance.getId(),"stringVar","en-AU",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en-AU' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=runtimeService.getDataObject(processInstance.getId(),"stringVar","en-GB",true);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=runtimeService.getDataObject(processInstance.getId(),"stringVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar",dataObject.getLocalizedName());
  assertEquals("stringVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=runtimeService.getDataObjectLocal(processInstance.getId(),"stringVar","en-US",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en-US' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=runtimeService.getDataObjectLocal(processInstance.getId(),"stringVar","en-AU",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en-AU' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=runtimeService.getDataObjectLocal(processInstance.getId(),"stringVar","en-GB",true);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  dataObject=runtimeService.getDataObjectLocal(processInstance.getId(),"stringVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar",dataObject.getLocalizedName());
  assertEquals("stringVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  Execution subprocess=runtimeService.createExecutionQuery().processInstanceId(processInstance.getId()).activityId("subprocess1").singleResult();
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),"es",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'es' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'es' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),"en-US",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-US' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-US' Description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),"en-AU",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-AU' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-AU' Description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),"en-GB",true);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en' Description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),"en-GB",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'default' description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("int",dataObjects.get("intVar").getType());
  variableNames.add("intVar");
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),variableNames,"en-US",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-US' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-US' Description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),variableNames,"en-AU",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-AU' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-AU' Description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),variableNames,"en-GB",true);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en' Description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjects(subprocess.getId(),variableNames,"en-GB",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'default' description",dataObjects.get("intVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),"en-US",false);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-US' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-US' Description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),"en-AU",false);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-AU' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-AU' Description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),"en-GB",true);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en' Description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),"en-GB",false);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'default' description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),"ja-JA",true);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'default' description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),variableNames,"en-US",false);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-US' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-US' Description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),variableNames,"en-AU",false);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en-AU' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en-AU' Description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),variableNames,"en-GB",true);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar 'en' Name",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'en' Description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=runtimeService.getDataObjectsLocal(subprocess.getId(),variableNames,"en-GB",false);
  assertEquals(1,dataObjects.size());
  assertEquals("intVar",dataObjects.get("intVar").getName());
  assertEquals(null,dataObjects.get("intVar").getValue());
  assertEquals("intVar",dataObjects.get("intVar").getLocalizedName());
  assertEquals("intVar 'default' description",dataObjects.get("intVar").getDescription());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObject=runtimeService.getDataObject(subprocess.getId(),"intVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObject(subprocess.getId(),"intVar","en-US",false);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar 'en-US' Name",dataObject.getLocalizedName());
  assertEquals("intVar 'en-US' Description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObject(subprocess.getId(),"intVar","en-AU",false);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar 'en-AU' Name",dataObject.getLocalizedName());
  assertEquals("intVar 'en-AU' Description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObject(subprocess.getId(),"intVar","en-GB",true);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar 'en' Name",dataObject.getLocalizedName());
  assertEquals("intVar 'en' Description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObject(subprocess.getId(),"intVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObjectLocal(subprocess.getId(),"intVar","en-US",false);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar 'en-US' Name",dataObject.getLocalizedName());
  assertEquals("intVar 'en-US' Description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObjectLocal(subprocess.getId(),"intVar","en-AU",false);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar 'en-AU' Name",dataObject.getLocalizedName());
  assertEquals("intVar 'en-AU' Description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObjectLocal(subprocess.getId(),"intVar","en-GB",true);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar 'en' Name",dataObject.getLocalizedName());
  assertEquals("intVar 'en' Description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObject=runtimeService.getDataObjectLocal(subprocess.getId(),"intVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("intVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("int",dataObject.getType());
  dataObjects=taskService.getDataObjects(task.getId());
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=taskService.getDataObjects(task.getId());
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=taskService.getDataObjects(task.getId(),"en-US",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=taskService.getDataObjects(task.getId(),"en-AU",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=taskService.getDataObjects(task.getId(),"en-GB",true);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  dataObjects=taskService.getDataObjects(task.getId(),"en-GB",false);
  assertEquals(2,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("string",dataObjects.get("stringVar").getType());
  assertEquals("intVar",dataObject.getName());
  assertEquals(null,dataObject.getValue());
  assertEquals("intVar",dataObject.getLocalizedName());
  assertEquals("intVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("intVarId",dataObjects.get("intVar").getDataObjectDefinitionKey());
  assertEquals("int",dataObjects.get("intVar").getType());
  variableNames=new ArrayList<String>();
  variableNames.add("stringVar");
  dataObjects=taskService.getDataObjects(task.getId(),variableNames,"en-US",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-US' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=taskService.getDataObjects(task.getId(),variableNames,"en-AU",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en-AU' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=taskService.getDataObjects(task.getId(),variableNames,"en-GB",true);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar 'en' Name",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObjects=taskService.getDataObjects(task.getId(),variableNames,"en-GB",false);
  assertEquals(1,dataObjects.size());
  assertEquals("stringVar",dataObjects.get("stringVar").getName());
  assertEquals("coca-cola",dataObjects.get("stringVar").getValue());
  assertEquals("stringVar",dataObjects.get("stringVar").getLocalizedName());
  assertEquals("stringVar 'default' description",dataObjects.get("stringVar").getDescription());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("stringVarId",dataObjects.get("stringVar").getDataObjectDefinitionKey());
  assertEquals("string",dataObjects.get("stringVar").getType());
  dataObject=taskService.getDataObject(task.getId(),"stringVar");
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar",dataObject.getLocalizedName());
  assertEquals("stringVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("string",dataObject.getType());
  dataObject=taskService.getDataObject(task.getId(),"stringVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar",dataObject.getLocalizedName());
  assertEquals("stringVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("string",dataObject.getType());
  dataObject=taskService.getDataObject(task.getId(),"stringVar","en-US",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en-US' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en-US' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("string",dataObject.getType());
  dataObject=taskService.getDataObject(task.getId(),"stringVar","en-AU",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en-AU' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en-AU' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("string",dataObject.getType());
  dataObject=taskService.getDataObject(task.getId(),"stringVar","en-GB",true);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar 'en' Name",dataObject.getLocalizedName());
  assertEquals("stringVar 'en' Description",dataObject.getDescription());
  assertEquals("stringVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("string",dataObject.getType());
  dataObject=taskService.getDataObject(task.getId(),"stringVar","en-GB",false);
  assertNotNull(dataObject);
  assertEquals("stringVar",dataObject.getName());
  assertEquals("coca-cola",dataObject.getValue());
  assertEquals("stringVar",dataObject.getLocalizedName());
  assertEquals("stringVar 'default' description",dataObject.getDescription());
  assertEquals("stringVarId",dataObject.getDataObjectDefinitionKey());
  assertEquals("string",dataObject.getType());
}
