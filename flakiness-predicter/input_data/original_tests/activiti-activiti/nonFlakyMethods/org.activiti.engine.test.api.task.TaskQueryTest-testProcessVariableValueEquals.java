@Deployment public void testProcessVariableValueEquals() throws Exception {
  Map<String,Object> variables=new HashMap<String,Object>();
  variables.put("longVar",928374L);
  variables.put("shortVar",(short)123);
  variables.put("integerVar",1234);
  variables.put("stringVar","stringValue");
  variables.put("booleanVar",true);
  Date date=Calendar.getInstance().getTime();
  variables.put("dateVar",date);
  variables.put("nullVar",null);
  ProcessInstance processInstance=runtimeService.startProcessInstanceByKey("oneTaskProcess",variables);
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("longVar",928374L).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("shortVar",(short)123).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("integerVar",1234).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("stringVar","stringValue").count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("booleanVar",true).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("dateVar",date).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("nullVar",null).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("longVar",999L).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("shortVar",(short)999).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("integerVar",999).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("stringVar","999").count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("booleanVar",false).count());
  Calendar otherDate=Calendar.getInstance();
  otherDate.add(Calendar.YEAR,1);
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("dateVar",otherDate.getTime()).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("nullVar","999").count());
  assertEquals(0,taskService.createTaskQuery().taskVariableValueEquals("longVar",928374L).count());
  assertEquals(0,taskService.createTaskQuery().taskVariableValueEquals("shortVar",(short)123).count());
  assertEquals(0,taskService.createTaskQuery().taskVariableValueEquals("integerVar",1234).count());
  assertEquals(0,taskService.createTaskQuery().taskVariableValueEquals("stringVar","stringValue").count());
  assertEquals(0,taskService.createTaskQuery().taskVariableValueEquals("booleanVar",true).count());
  assertEquals(0,taskService.createTaskQuery().taskVariableValueEquals("dateVar",date).count());
  assertEquals(0,taskService.createTaskQuery().taskVariableValueEquals("nullVar",null).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueNotEquals("longVar",999L).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueNotEquals("shortVar",(short)999).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueNotEquals("integerVar",999).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueNotEquals("stringVar","999").count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueNotEquals("booleanVar",false).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueNotEquals("longVar",928374L).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals(928374L).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals((short)123).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals(1234).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("stringValue").count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals(true).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals(date).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals(null).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals(999999L).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals((short)999).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals(9999).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals("unexistingstringvalue").count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals(false).count());
  assertEquals(0,taskService.createTaskQuery().processVariableValueEquals(otherDate.getTime()).count());
  Task task=taskService.createTaskQuery().processInstanceId(processInstance.getId()).singleResult();
  taskService.setVariableLocal(task.getId(),"taskVar","theValue");
  taskService.setVariableLocal(task.getId(),"longVar",928374L);
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("longVar",928374L).taskVariableValueEquals("taskVar","theValue").count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals("longVar",928374L).taskVariableValueEquals("longVar",928374L).count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals(928374L).taskVariableValueEquals("theValue").count());
  assertEquals(1,taskService.createTaskQuery().processVariableValueEquals(928374L).taskVariableValueEquals(928374L).count());
}
